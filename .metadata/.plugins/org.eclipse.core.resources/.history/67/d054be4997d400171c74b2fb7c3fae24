/**
 * 
 */
package edu.neu.csye6200.ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.logging.Logger;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * @author Shiqi
 *
 */
public class ShiqiAPP implements ActionListener, ChangeListener, ItemListener {
	private static final int ANGLE_MIN = 0;
	private static final int ANGLE_MAX = 90;
	private static final int ANGLE_INIT = 45; // initial stem angle
	private static final int LENGTH_MIN = 100;
	private static final int LENGTH_MAX = 500;
	private static final int LENGTH_INIT = 350;// initial stem length
	final static int maxGap = 20;
	private Logger log = Logger.getLogger(ShiqiAPP.class.getName());
	private JFrame frame;
	private JPanel mainPanel = null;
	ArrayList<JPanel> panels = new ArrayList<JPanel>();
	private JSlider angleSlider = null;
	private JSlider lengthSlider = null;
	JComboBox<String> forkNumList;
	JComboBox<String> generationNumList;
	private JButton startBtn = null;
	private JButton stopBtn = null;
	private MyCanvas canvas = new MyCanvas();
	private int forkNum = 3;
	private int angle = ANGLE_INIT;
	private int initialLength = LENGTH_INIT;
	private int generationNum = 5;
	private JComboBox<String> rulesList;

	// constructor
	public ShiqiAPP() {
		log.info("App started");
		initGUI();

	}

	private void initGUI() {
		frame = new JFrame();
		frame.setSize(1500, 900);
		frame.setTitle("ShiqiAPP");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
		frame.setLayout(new BorderLayout());
		JLabel title = new JLabel("<html><font size=+5><b>SHIQI'S BIOLOGICAL GROWTH</b></font></html>", JLabel.CENTER);
		title.setPreferredSize(new Dimension(frame.getWidth(), frame.getHeight() / 8));
		frame.add(title, BorderLayout.NORTH);
		frame.add(getMainPanel(), BorderLayout.EAST);
		frame.add(canvas, BorderLayout.CENTER);
	}

	/**
	 * @return JPanel Build the top main panel
	 */
	private JPanel getMainPanel() {
		// initialize mainPanel
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridLayout(6, 1, 50, 50));
		mainPanel.setPreferredSize(new Dimension(frame.getWidth() / 4, frame.getHeight()));
		JPanel p_angle = new JPanel(new BorderLayout());
		panels.add(p_angle);
		JPanel p_length = new JPanel(new BorderLayout());
		panels.add(p_length);
		JPanel p_forks = new JPanel(new FlowLayout(FlowLayout.LEFT));
		panels.add(p_forks);
		JPanel p_generations = new JPanel(new FlowLayout(FlowLayout.LEFT));
		panels.add(p_generations);
		JPanel p_rules = new JPanel(new FlowLayout(FlowLayout.LEFT));
		panels.add(p_rules);
		JPanel p_buttons = new JPanel(new GridLayout(1, 2, 5, 5));
		panels.add(p_buttons);
		// initialize two buttons
		startBtn = new JButton("Generate");
		startBtn.addActionListener(this);// subscribe to button events
		stopBtn = new JButton("Clear");
		stopBtn.addActionListener(this);// subscribe to button events

		// initialize the angleSilder section
		JLabel lb1 = new JLabel("<html><font size=+2><b>Angle</b></font></html>");
		angleSlider = new JSlider(JSlider.HORIZONTAL, ANGLE_MIN, ANGLE_MAX, ANGLE_INIT);
		angleSlider.addChangeListener(this);
		angleSlider.setMajorTickSpacing(15);
		angleSlider.setMinorTickSpacing(5);
		angleSlider.setPaintTicks(true);
		angleSlider.setPaintLabels(true);

		// initialize the lengthSilder section
		JLabel lb2 = new JLabel("<html><font size=+2><b>Length</b></font></html>");
		lengthSlider = new JSlider(JSlider.HORIZONTAL, LENGTH_MIN, LENGTH_MAX, LENGTH_INIT);
		lengthSlider.addChangeListener(this);
		lengthSlider.setMajorTickSpacing(50);
		lengthSlider.setMinorTickSpacing(25);
		lengthSlider.setPaintTicks(true);
		lengthSlider.setPaintLabels(true);

		// initialize the fork number list section
		JLabel lb3 = new JLabel("<html><font size=+2><b>Forks</b></font></html>");
		String[] forkNumStrings = { "2", "3", "4", "5", "6", "7", "8" };
		// Create the combo box, select item at index 0.
		// Indices start at 0, so 0 specifies "2".
		forkNumList = new JComboBox<String>(forkNumStrings);
		forkNumList.setSelectedIndex(1);// default selected fork number is 3
		forkNumList.addActionListener(this);
		forkNumList.addItemListener(this);

		// initialize the generation number list section
		JLabel lb4 = new JLabel("<html><font size=+2><b>Generations</b></font></html>");
		String[] generationNumStrings = { "1", "2", "3", "4", "5", "6", "7" };
		generationNumList = new JComboBox<String>(generationNumStrings);
		generationNumList.setSelectedIndex(4);// default selected fork number is
												// // 5
		generationNumList.addActionListener(this);

		// rules hot keys
		JLabel lb5 = new JLabel("<html><font size=+2><b>Given Rules</b></font></html>");
		String[] rulesStrings = { "1", "2", "3", "4", "5", "6", "7" };
		rulesList = new JComboBox<String>(rulesStrings);
		rulesList.setSelectedIndex(0);
		rulesList.addActionListener(this);

		// set the layout
		p_angle.add(lb1, BorderLayout.NORTH);
		p_angle.add(angleSlider, BorderLayout.CENTER);
		p_length.add(lb2, BorderLayout.NORTH);
		p_length.add(lengthSlider, BorderLayout.CENTER);
		p_forks.add(lb3);
		p_forks.add(forkNumList);
		p_generations.add(lb4);
		p_generations.add(generationNumList);
		p_rules.add(lb5);
		p_rules.add(rulesList);
		p_buttons.add(startBtn);
		p_buttons.add(stopBtn);
		for(JPanel p : panels){
			mainPanel.add(p);
		}
		return mainPanel;
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		log.info("We reeived on ActionEvent " + arg0);
		if (arg0.getActionCommand().equalsIgnoreCase("Generate")) {
			BGRule rule = new BGRule(forkNum, angle, initialLength);
			BGGeneration test = new BGGeneration(rule, generationNum);
			System.out.println("Generate: " + "\nRule: " + "BGRule(fork: " + forkNum + ", angle: " + angle
					+ ", length: " + initialLength + ")" + "\nGenerations: " + generationNum);
			canvas.setTree(test.tree);
			canvas.repaint();
		} else if (arg0.getActionCommand().equalsIgnoreCase("Clear")) {
			// System.out.println("Clear was pressed");
			canvas.setTree(null);
			canvas.repaint();
		} else {
			JComboBox<String> source = (JComboBox<String>) arg0.getSource();
			if (source == forkNumList)
				System.out.println("fork changed: " + arg0.getActionCommand());
				forkNum = Integer.parseInt((String) source.getSelectedItem());
			if (source == rulesList){
				switch((String)source.getSelectedItem()){
				case "1": {
					
					BGRule rule1 = new BGRule(7,57,300);
					//generationNum = 5;
					forkNumList.setSelectedIndex(rule1.getForkNum()-2);
					generationNumList.setSelectedIndex(4);
					angleSlider.setValue((int)rule1.getAngle());
					lengthSlider.setValue((int)rule1.getInitialStemLength());
					
				}
				case "2":{
					BGRule rule2 = new BGRule(7,60,350);
					//generationNum = 5;
					forkNumList.setSelectedIndex(rule2.getForkNum()-1);
					generationNumList.setSelectedIndex(4);
					angleSlider.setValue((int)rule2.getAngle());
					lengthSlider.setValue((int)rule2.getInitialStemLength());
					
				}
				case "3":{
					BGRule rule3 = new BGRule(5,60,350);
					//generationNum = 7;
					forkNumList.setSelectedIndex(rule3.getForkNum()-1);
					generationNumList.setSelectedIndex(6);
					angleSlider.setValue((int)rule3.getAngle());
					lengthSlider.setValue((int)rule3.getInitialStemLength());
				}
				case "4":{
					BGRule rule4 = new BGRule(7,30,350);
					//generationNum = 5;
					
					forkNumList.setSelectedIndex(rule4.getForkNum()-1);
					generationNumList.setSelectedIndex(4);
					angleSlider.setValue((int)rule4.getAngle());
					lengthSlider.setValue((int)rule4.getInitialStemLength());
				}
				case "5":{
					//TODO undefined
					BGRule rule5 = new BGRule(7,57,300);
					//generationNum = 5;
					forkNumList.setSelectedIndex(rule5.getForkNum()-1);
					generationNumList.setSelectedIndex(4);
					angleSlider.setValue((int)rule5.getAngle());
					lengthSlider.setValue((int)rule5.getInitialStemLength());
				}
				}
			}
			if (source == generationNumList)
				generationNum = Integer.parseInt((String) source.getSelectedItem());
			// System.out.println("generationNum: " +generationNum);
		}
	}

	@Override
	public void stateChanged(ChangeEvent e) {
		JSlider source = (JSlider) e.getSource();
		if (!source.getValueIsAdjusting()) {
			if (source == angleSlider)
				angle = (int) source.getValue();
			if (source == lengthSlider)
				initialLength = (int) source.getValue();
		}
	}

	@Override
	public void itemStateChanged(ItemEvent e) {
		
		if(e.getStateChange() == ItemEvent.SELECTED){
			String item = (String) e.getItem();
		}
	}
	public static void main(String[] args) {
		new ShiqiAPP();
	}

	
	

}
